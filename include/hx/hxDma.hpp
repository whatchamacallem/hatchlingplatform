#pragma once
// Copyright 2017-2025 Adrian Johnston

#include <hx/hatchling.h>

// ----------------------------------------------------------------------------
// Internally profiling and validating DMA API.  This code is intended to be
// customized for your platform.  If HX_PROFILE != 0 then hxDmaStart(),
// hxDmaAwaitSyncPoint() and hxDmaAwaitAll() calls generate descriptive labels.

// Used to marks a point in time so that preceding DMA operations can be waited for.
struct hxDmaSyncPoint {
#if HX_DEBUG_DMA
	// A synchronization point must be set with hxDmaAddSyncPoint() before use.
	hxDmaSyncPoint() : debugOnly(~(size_t)0u), pImpl(hxnull) { }
	size_t debugOnly;
#else
	hxDmaSyncPoint() : pImpl(hxnull) { }
#endif
	// TODO: Configure for target.  Use pImpl to store a target specific handle.
	char* pImpl;
};

// Acquires and initializes resources required for DMA.  Called by hxInit().
void hxDmaInit();

// Waits for all DMA and invalidates all synchronization points.  Must be called
// intermittently when HX_DEBUG_DMA != 0 to recycle resources.
void hxDmaEndFrame();

// Marks a point in time so that preceding DMA operations can be waited for using
// syncPoint.
void hxDmaAddSyncPoint(hxDmaSyncPoint& syncPoint_);

#if HX_PROFILE
// Initiates a DMA transfer from src to dst of bytes length.  labelStringLiteral,
// if non-null, is used in profiling and debug diagnostic messages.
#define hxDmaStart(dst_, src_, bytes_, labelStringLiteral_) \
	hxDmaStartLabeled(dst_, src_, bytes_, labelStringLiteral_)

// Waits until all DMA proceeding the corresponding call to hxDmaAddSyncPoint()
// is completed.  labelStringLiteral, if non-null, is used in a profiler record
// generated by this event and in profiling and debug diagnostic messages.
#define hxDmaAwaitSyncPoint(syncPoint_, labelStringLiteral_) \
	hxDmaAwaitSyncPointLabeled(syncPoint_, labelStringLiteral_)

// Waits until all DMA is completed.  labelStringLiteral, if non-null, is used
// in a profiler record generated by this event and in debug diagnostic messages.
#define hxDmaAwaitAll(labelStringLiteral_) hxDmaAwaitAllLabeled(labelStringLiteral_)

#else // !HX_PROFILE

#define hxDmaStart(dst_, src_, bytes_, labelStringLiteral_) hxDmaStartLabeled(dst_, src_, bytes_, hxnull)
#define hxDmaAwaitSyncPoint(syncPoint_, labelStringLiteral_) hxDmaAwaitSyncPointLabeled(syncPoint_, hxnull)
#define hxDmaAwaitAll(labelStringLiteral_) hxDmaAwaitAllLabeled(hxnull)
#endif

// Use hxDmaStart to compile out labelStringLiteral when not profiling.
void hxDmaStartLabeled(void* dst_, const void* src_, size_t bytes_, const char* labelStringLiteral_);

// Use hxDmaAwaitSyncPoint to compile out labelStringLiteral when not profiling.
void hxDmaAwaitSyncPointLabeled(hxDmaSyncPoint& syncPoint_, const char* labelStringLiteral_);

// Use hxDmaAwaitAll to compile out labelStringLiteral when not profiling.
void hxDmaAwaitAllLabeled(const char* labelStringLiteral_);
